
import unittest

from AMFDecoder import AMFDecoder
from AMFEncoder import AMFEncoder
from AMFXML import FromXML, ToXML

##################################################
# {{{ Used to convert a file to repr-like string/file
def repr_file(path, topath = None):
	fp = open(path, 'rb')
	s = fp.read(32)
	lines = []
	while s:
		line = repr(s)
		line = line[1:-1]
		lines.append(line)
		s = fp.read(32)
	all = 'def get_data_():\n\treturn \\\n"' + '\\\n'.join(lines) + '";'
	fp.close()
	if topath:
		fp = open(topath, 'wb')
		fp.write(all)
		fp.close()
	return all
# }}}
##################################################
# {{{ Sample data

# client ping
def get_data_1():
	return \
"\x00\x03\x00\x00\x00\x01\x00\x04null\x00\x02/1\x00\x00\x00\xcb\n\x00\x00\x00\x01\x11\n\x81\x13Mfl\
ex.messaging.messages.CommandMes\
sage\x13operation\x1bcorrelationId\x0fhea\
ders\x17destination\x13timestamp\tbody\x11\
clientId\x15timeToLive\x13messageId\x04\x05\x06\
\x01\n\x0b\x01\tDSId\x06\x07nil\x01\x06\x01\x04\x00\n\x05\x01\x01\x04\x00\x06IF19AE\
A22-8447-DD95-8C7A-D6424E55E232";

# client ping response
def get_data_2():
	return \
"\x00\x03\x00\x01\x00\x12AppendToGatewayUrl\x00\xff\xff\xff\xff\x02\x00,\
;jsessionid=84133E0430A2F71E91D6\
C712F6814079\x00\x01\x00\x0b/1/onResult\x00\x00\xff\xff\xff\
\xff\x11\n\x81\x03Uflex.messaging.messages.Ac\
knowledgeMessage\x17destination\x0fhea\
ders\x1bcorrelationId\x13messageId\x13tim\
estamp\x11clientId\x15timeToLive\tbody\x01\
\n\x13\x01\tDSId\x06I6717F1ED-FB0B-377A-46E\
9-7CDBC59DB8A3\x06IF19AEA22-8447-DD\
95-8C7A-D6424E55E232\x06I6717F1ED-F\
B2F-94B7-95F9-EE49F6B0FAC2\x05Bq\xcdd%\
R\xb0\x00\x06I6717F1ED-FB1E-4A71-2ECE-895\
21E76CF7F\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01";

# login
def get_data_3():
	return \
"\x00\x03\x00\x00\x00\x01\x00\x04null\x00\x02/4\x00\x00\x01A\n\x00\x00\x00\x01\x11\n\x81\x13Ofl\
ex.messaging.messages.RemotingMe\
ssage\x13operation\rsource\x0fheaders\x17d\
estination\x13timestamp\tbody\x11client\
Id\x15timeToLive\x13messageId\x06\x0blogin\x01\n\
\x0b\x01\x15DSEndpoint\x06\rmy-amf\tDSId\x06I649F\
D9B4-5E19-45D7-46F9-46B4BC7CF647\
\x01\x06\x15SUMService\x04\x00\t\t\x01\x06\x13vtbaadmin\x06\rv\
itria\x02\x03\x06I649FDA27-1D0A-3A78-B34F\
-199A490800EF\x04\x00\x06I78D7B35B-F2E9-C\
8CE-D342-D53FF8536EBD";


# login response
def get_data_4():
	return \
"\x00\x03\x00\x00\x00\x01\x00\x0b/4/onResult\x00\x00\xff\xff\xff\xff\x11\n\x81\x03Ufl\
ex.messaging.messages.Acknowledg\
eMessage\x17destination\x0fheaders\x1bcor\
relationId\x13messageId\x13timestamp\x11c\
lientId\x15timeToLive\tbody\x01\n\x03\x01\x06I78D\
7B35B-F2E9-C8CE-D342-D53FF8536EB\
D\x06I64A1354F-2F0D-8AE3-2E16-A744B\
1DDF2B4\x05Bq\xcdS\xff\xb9\xf0\x00\x06I649FDA27-1D0A-\
3A78-B34F-199A490800EF\x05\x00\x00\x00\x00\x00\x00\x00\x00\n\
\x81\x13\x01\x13loginUser\x1fautoRefreshType#li\
censesPrivilege\x1dprivilegesInfo\x07b\
e1\x1bisAutoRefresh-WorkflowAccessi\
bleInfo\x13accessBEs\x1bisGlobalAdmin\n\
S3com.vitria.m3oui.sum.User\x0bphon\
e\risUser\x0bemail\tname\x05id\x01\x03\x01\x06/Vitri\
a BA administrator\x06\x13vtbaadmin\x06\x11r\
ealtime\t\x03\x01\x06\x030\n\x13\x01 \n\x05\n\x07Cflex.messa\
ging.io.ArrayCollection\t\x1d\x01\n\x82\x037co\
m.vitria.m3oui.core.Model\x11lcStat\
us\x19lcStatusDate\x15lcStatusBy\ttype\x11\
lockedBy\x11category\x15properties4\x15re\
ferences\x11contents\x1bremovedRefers\x19\
lcStatusNote\x0bflags\tpath2\x19removed\
Props\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06\x1dKnowledgeSpace\
\x01\x01\n\x81\x13\x01\x17vt:lastDate\x19hasLifecycle%\
vtt:numberOfModels\x17vtui:hidden\x15r\
eleasable\x19vt:firstUser-vtt:model\
sLockedByUser\x17vt:lastUser\x19vt:fir\
stDate\x05Bq\xcdSn%\xf0\x00\x06\ttrue\x06<\x06\x0bfalse\x06r\
\x068\x06<\x068\x05Bq\xcdSn%\xf0\x00\x06Ia16c6311-7a5a-4\
79f-9a78-e31ff649fbf1\x01\n\x05\x01\x01\x04\x1f\x06?/v\
tbe197358/vtProcess1355134543\x06\x0fP\
rocess\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n\x81#\x01`bdf\
hljnp\x0fvtui:BE\x05Bq\xcdSn\xa0\x10\x00\x06r\x06\x0527\x06t\x06r\
\x06<\x068\x068\x05Bq\xcdSn\xa0\x10\x00\x06 \x06Ie77c7cd4-8d78\
-4bf7-bdbb-6f5769380157\x01\n\x05\x01\x01\x04\x1f\x06=\
/vtbe197358/vtSchema1824120383\x06\r\
Schema\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n\x1d\x05Bq\xcdSn\
\xd2\xe0\x00\x06t\x06<\x06t\x06t\x068\x06<\x068\x05Bq\xcdSn\xd2\xe0\x00\x06I4deb\
1535-2630-4e41-b97e-8142e68d7108\
\x01\n\x05\x01\x01\x04\x1f\x06C/vtbe197358/vtWorkgroup\
1193143826\x06\x13Workgroup\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\x00\
\x00\x00\x01\x06^\x01\x01\n!\x05Bq\xcdSn\xdf\x90\x00\x06t\x06\x037\x06t\x06r\x06<\x068\x06\
8\x05Bq\xcdSn\xdf\x90\x00\x06 \x06I8ff21db7-cfc7-427a\
-825b-5ed54ceecdf1\x01\n\x05\x01\x01\x04\x1f\x063/vtbe\
197358/vtPage2479791\x06\tPage\x01\n\x19\x01\x05\x00\
\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n\x1d\x05Bq\xcdSn\xed@\x00\x06r\x06<\x06t\x06r\x06\
8\x06<\x068\x05Bq\xcdSn\xed@\x00\x06I0162b214-0d53-40\
79-a093-75d55955c554\x01\n\x05\x01\x01\x04\x1f\x06=/vt\
be197358/vtService646160747\x06\x0fSer\
vice\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n!\x05Bq\xcdSn\xf7\x00\
\x00\x06t\x06\x0523\x06t\x06r\x06<\x068\x068\x05Bq\xcdSn\xf7\x00\x00\x06 \x06Ice\
83acf7-8e40-4dc2-adb5-2f66b68acb\
92\x01\n\x05\x01\x01\x04\x1f\x067/vtbe197358/vtQuery78\
391464\x06\x0bQuery\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n\
\x1d\x05Bq\xcdSn\xff\xd0\x00\x06r\x06\x034\x06t\x06r\x068\x06<\x068\x05Bq\xcdSn\xff\
\xd0\x00\x06I0fde6c63-6277-4c75-a042-7c5e\
30636ddd\x01\n\x05\x01\x01\x04\x1f\x06G/vtbe197358/vtE\
ventPolicy1684328524\x06\x17EventPolic\
y\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n\x1d\x05Bq\xcdSo\rp\x00\x06t\
\x06<\x06t\x06t\x068\x06<\x068\x05Bq\xcdSo\rp\x00\x06I82ba6bc0-\
99d6-4240-a856-e61f02836e3c\x01\n\x05\x01\x01\
\x04\x1f\x06?/vtbe197358/vtRelease1539719\
193\x06\x0fRelease\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n\x1d\
\x05Bq\xcdSo\x190\x00\x06t\x06\x031\x06t\x06t\x068\x06<\x068\x05Bq\xcdSo\x190\
\x00\x06I79f51d42-2a8b-42ba-ba18-037d5\
a808a00\x01\n\x05\x01\x01\x04\x1f\x06=/vtbe197358/vtSe\
rver1821959325\x06\rServer\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\
\x00\x00\x00\x01\x06^\x01\x01\n\x1d\x05Bq\xcdSogP\x00\x06t\x06\x0516\x06t\x06t\x068\x06\
<\x068\x05Bq\xcdSogP\x00\x06I64405863-5a3f-430c\
-8b7a-09beb360c128\x01\n\x05\x01\x01\x04\x1f\x063/vtbe\
197358/vtRole2552982\x06\tRole\x01\n\x19\x01\x05\x00\
\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n\x1d\x05Bq\xcdSoq \x00\x06r\x06<\x06t\x06r\x06\
8\x06<\x068\x05Bq\xcdSoq \x00\x06I005de7f6-4eb8-45\
3b-91f7-d1a7af2964ac\x01\n\x05\x01\x01\x04\x1f\x06G/vt\
be197358/vtEventSource1770492725\
\x06\x17EventSource\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n\
!\x05Bq\xcdSo\x970\x00\x06t\x06\x0528\x06t\x06r\x06<\x068\x068\x05Bq\xcdSo\
\x970\x00\x06 \x06I2ba7662c-ea90-4831-aa46-4\
23efcfbfddd\x01\n\x05\x01\x01\x04\x1f\x06=/vtbe197358/\
vtLayout2025855158\x06\rLayout\x01\n\x19\x01\x05\x00\
\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\n\x1d\x05Bq\xcdSo\xa7\xd0\x00\x06r\x06<\x06t\x06r\x06\
8\x06<\x068\x05Bq\xcdSo\xa7\xd0\x00\x06I8a5b5fc7-c838-43\
38-847b-77950985736d\x01\n\x05\x01\x01\x04\x1f\x063/vt\
be197358/vtFeed2185662\x06\tFeed\x01\n\x19\x01\
\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06^\x01\x01\nS\x01`dljp\x05Bq\xcdSx.0\x00\x06\
<\x06<\x068\x05Bq\xcdSx.0\x00\x06I18a35263-d9b7-4f\
cc-b02d-8a0859a55801\x01\n\x05\x01\x01\x04\x1f\x067/vt\
be197358/vtImage70760763\x06\x0bImage\x01\
\x03\n\x15\t\x01\x01\n\x15\t\x03\x01\n\x19\x01\x05\x00\x00\x00\x00\x00\x00\x00\x00\x01\x06'Busine\
ssEnvironment\x01\x01\n3\x01`jp\x05Bq\xcdSn\x1b0\x00\x068\
\x05Bq\xcdSn\x1b0\x00\x06Iaf4ceba2-4af5-44d7-ae\
ed-4c6213d6ae7f\x01\n\x05\x01\x01\x04\x1f\x06\x17/vtbe197\
358\x06 \x01\x03";

# }}}

##################################################

class TestSample(unittest.TestCase):
	def setUp(self):
		self.samples = [
				get_data_1(),
				get_data_2(),
				get_data_3(),
				get_data_4(),
				]
	def assertRawPacketEqual(self, r1, r2):
		self.assertEqual(len(r1), len(r2))

	def testAll(self):
		for sample in self.samples:
			decoder = AMFDecoder(sample)
			packet = decoder.decode()
			toxml = ToXML(packet)
			xml = toxml.get_xml()
			fromxml = FromXML(xml)
			new_packet = fromxml.get_packet()
			encoder = AMFEncoder(new_packet)
			result = encoder.encode()

			self.assertRawPacketEqual(sample, result)


##################################################

if __name__ == '__main__':
	unittest.main()


# vim: foldmethod=marker:
